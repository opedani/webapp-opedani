---
- name: Apache Playbook
  hosts: apache
  remote_user: ec2-user
  become: yes

  tasks:
    - name: Upgrade all packages
      ansible.builtin.yum:
        name: '*'
        state: latest

    - name: Install and upgrade Apache (httpd) to latest version
      ansible.builtin.yum:
        name: httpd
        state: latest

    - name: Stop Apache (httpd), if started
      ansible.builtin.service:
        name: httpd
        state: stopped

    - name: Copy Apache reverse proxy configuration file
      ansible.builtin.copy:
        src: data/httpd.conf
        dest: /etc/httpd/conf/httpd.conf
        owner: root
        group: root
        mode: 0644

    - name: Restart and enable Apache (httpd)
      ansible.builtin.service:
        name: httpd
        state: restarted
        enabled: yes

- name: Node Playbook
  hosts: node
  remote_user: ec2-user

  tasks:
    - name: Upgrade all packages
      ansible.builtin.yum:
        name: '*'
        state: latest
      become: true

    - name: Download Node setup script
      ansible.builtin.get_url:
        url: https://rpm.nodesource.com/setup_16.x
        dest: /home/ec2-user/nodesetup.sh
        mode: '0755'
      force: yes

    - name: Execute Node setup script
      ansible.builtin.shell: /home/ec2-user/nodesetup.sh
      become: true

    - name: Install and upgrade necessary software
      ansible.builtin.yum:
        name:
          - nodejs-16.16.0-1nodesource
          - git
          - gcc-c++
          - make
        state: latest
      become: true

    - name: Install pm2
      ansible.builtin.shell:
        cmd: npm install pm2@latest -g
        chdir: /home/ec2-user
      become: true

    # This step must ignore errors because "pm2 startup" returns non-zero code due to needing a followup command
    - name: pm2 startup
      ignore_errors: yes
      ansible.builtin.shell:
        cmd: pm2 startup
        chdir: /home/ec2-user

    - name: pm2 startup necessary followup command
      ansible.builtin.shell:
        cmd: env PATH=$PATH:/usr/bin /usr/lib/node_modules/pm2/bin/pm2 startup systemd -u ec2-user --hp /home/ec2-user
        chdir: /home/ec2-user
      become: true

    - name: git clone / pull
      git:
        repo: https://github.com/opedani/webapp-opedani.git
        dest: /home/ec2-user/webapp-opedani
        single_branch: yes
        version: production

    - name: npm install
      ansible.builtin.shell:
        cmd: npm install
        chdir: /home/ec2-user/webapp-opedani

    - name: Copy pm2 ecosystem file
      copy:
        src: data/ecosystem.config.js
        dest: /home/ec2-user/ecosystem.config.js
        owner: ec2-user
        group: ec2-user
        mode: 0664

    - name: pm2 reload
      ansible.builtin.shell:
        cmd: pm2 reload ecosystem.config.js
        chdir: /home/ec2-user

    - name: pm2 save
      ansible.builtin.shell:
        cmd: pm2 save
        chdir: /home/ec2-user
